manifest {
    name = 'NBIS Genome Annotation Workflow'
    author = 'Mahesh Binzer-Panchal'
    homePage = ''
    description = 'Workflows for assisting in de novo genome annotation.'
    mainScript = 'main.nf'
    nextflowVersion = '!>=21.10.6'
    version = '1.0'
}

params {
    // General parameters
    outdir = 'results'
    subworkflow = ''
    genome = "/path/to/genome/assembly.fasta"

    // Ab initio training parameters
    maker_evidence_gff = "/path/to/maker/evidence.gff"
    species_label = 'test_species'  // e.g. 'asecodes_parviclava'

    // Annotation preprocessing parameters
    params.busco_lineage = [ 'eukaryota_odb10', 'bacteria_odb10' ]

    // Functional annotation parameters

    // Transcript assembly parameters
    reads = "/path/to/reads_{1,2}.fastq.gz"
    single_end = false
    skip_trimming = false
    multiqc_config = "$projectDir/assets/multiqc_conf.yml"

    // The default mode of publishing results (see https://www.nextflow.io/docs/latest/process.html#publishdir)
    publishDir_mode = 'copy'
    // Enables the use of the conda package manager
    enable_conda = false
}

profiles {

    uppmax {
        executor {
            name = 'slurm'
        }
        params.project = 'snic20XX'
        process {
            clusterOptions = "-A ${params.project}"
            scratch = '$SNIC_TMP'
        }
        // includeConfig "$projectDir/config/compute_resources.config"
        singularity.enabled = true
        singularity.envWhitelist = 'SNIC_TMP'
        // includeConfig "$projectDir/config/software_packages.config"
    }

    conda {
        // includeConfig "$projectDir/config/software_packages.config"
        params.enable_conda = true
    }

    mamba {
        // includeConfig "$projectDir/config/software_packages.config"
        params.enable_conda = true
        conda.useMamba = true
    }

    docker {
        // includeConfig "$projectDir/config/software_packages.config"
        docker.enabled = true
        docker.runOptions='-u "$( id -u ):$( id -g )"'
    }

    singularity {
        singularity.enabled = true
        // includeConfig "$projectDir/config/software_packages.config"
    }

    nbis {
        executor {
            name = 'slurm'
        }
        process {
            scratch = '/scratch'
        }
        // includeConfig "$projectDir/config/compute_resources.config"
    }

    test {
        includeConfig "$projectDir/config/test_profile.config"
    }

    pipeline_report {
        timeline {
            enabled = true
            file = "${params.outdir}/pipeline_report/execution_timeline.html"
        }
        report {
            enabled = true
            file = "${params.outdir}/pipeline_report/execution_report.html"
        }
        trace {
            enabled = true
            file = "${params.outdir}/pipeline_report/execution_trace.txt"
        }
        dag {
            enabled = true
            file = "${params.outdir}/pipeline_report/pipeline_dag.mmd"
        }
    }
}

includeConfig "$projectDir/config/modules.config"