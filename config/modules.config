// Custom map for publish paths
subworkflow_path {
    abinitio_training        = 'abinitio_training'
    annotation_preprocessing = 'annotation_preprocessing'
    functional_annotation    = 'functional_annotation'
    transcript_assembly      = 'transcript_assembly'
}

// Ab initio training modules
if ( params.subworkflow == 'abinitio_training' ){
    process {
        withName: 'AGAT_SEPARATERECORDS' {
            ext.args   = ''            
            publishDir = [
                path: "${params.outdir}/${subworkflow_path.transcript_assembly}/fastqc",
                mode: params.publishDir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
} 

// Annotation preprocessing modules
if ( params.subworkflow == 'annotation_preprocessing' ){
}

// Functional annotation modules
if ( params.subworkflow == 'functional_annotation' ){
}

// Transcript assembly modules
if ( params.subworkflow == 'transcript_assembly' ){
    process {
        withName: 'FASTQC' {
            ext.args   = '--quiet'
            publishDir = [
                path: "${params.outdir}/${subworkflow_path.transcript_assembly}/fastqc",
                mode: params.publishDir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
        withName: 'FASTP' {
            ext.args   = '-Q '
            publishDir = [
                path: "${params.outdir}/${subworkflow_path.transcript_assembly}/fastp",
                mode: params.publishDir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
        withName: 'HISAT2_ALIGN' {
            publishDir = [
                path: "${params.outdir}/${subworkflow_path.transcript_assembly}/hisat2",
                mode: params.publishDir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
        withName: 'STRINGTIE_STRINGTIE' {
            publishDir = [
                path: "${params.outdir}/${subworkflow_path.transcript_assembly}/stringtie",
                mode: params.publishDir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
        withName: 'MULTIQC' {
            publishDir = [
                path: "${params.outdir}/${subworkflow_path.transcript_assembly}/multiqc",
                mode: params.publishDir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}